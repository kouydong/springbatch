/*===========================================
테이블 삭제 처리
---------------------------------------------
DROP TABLE BATCH_STEP_EXECUTION_CONTEXT
DROP TABLE BATCH_JOB_EXECUTION_CONTEXT
DROP TABLE BATCH_STEP_EXECUTION
DROP TABLE BATCH_JOB_EXECUTION_PARAMS
DROP TABLE BATCH_JOB_EXECUTION
DROP TABLE BATCH_JOB_INSTANCE
DROP TABLE BATCH_STEP_EXECUTION_SEQ
DROP TABLE BATCH_JOB_EXECUTION_SEQ
DROP TABLE BATCH_JOB_SEQ
---------------------------------------------
시퀀스 삭제 처리
---------------------------------------------
DROP SEQUENCE BATCH_STEP_EXECUTION_SEQ_AUTO;
DROP SEQUENCE BATCH_JOB_EXECUTION_SEQ_AUTO;
DROP SEQUENCE BATCH_JOB_SEQ_AUTO;
====================================*/


--STEP 실행 SEQUENCE 생성
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ_AUTO;

--JOB 실행 SEQUENCE 생성
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ_AUTO;

--JOB SEQUENCE 생성
CREATE SEQUENCE BATCH_JOB_SEQ_AUTO;


-- BATCH_STEP_EXECUTION_SEQ 테이블 생성
CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT DEFAULT (NEXT VALUE FOR BATCH_STEP_EXECUTION_SEQ_AUTO) NOT NULL
	)

-- BATCH_JOB_EXECUTION_SEQ 테이블 생성
CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT DEFAULT (NEXT VALUE FOR BATCH_JOB_EXECUTION_SEQ_AUTO) NOT NULL
	)

-- BATCH_JOB_SEQ 테이블 생성
CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT DEFAULT (NEXT VALUE FOR BATCH_JOB_SEQ_AUTO) NOT NULL
	)

-- BATCH_JOB_INSTANCE
CREATE TABLE BATCH_JOB_INSTANCE  (
  JOB_INSTANCE_ID BIGINT  PRIMARY KEY ,
  VERSION BIGINT,
  JOB_NAME VARCHAR(100) NOT NULL ,
  JOB_KEY VARCHAR(2500)
);

--BATCH_JOB_EXCUTION
CREATE TABLE BATCH_JOB_EXECUTION  (
  JOB_EXECUTION_ID BIGINT  PRIMARY KEY ,
  VERSION BIGINT,
  JOB_INSTANCE_ID BIGINT NOT NULL,
  CREATE_TIME datetime NOT NULL,				--기본 자료형은 TIMESTAMP임
  START_TIME datetime DEFAULT NULL,				--기본 자료형은 TIMESTAMP임
  END_TIME datetime DEFAULT NULL,				--기본 자료형은 TIMESTAMP임
  STATUS VARCHAR(10),
  EXIT_CODE VARCHAR(20),
  EXIT_MESSAGE VARCHAR(2500),
  LAST_UPDATED datetime,						--datetime
  JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
  constraint JOB_INSTANCE_EXECUTION_FK foreign key (JOB_INSTANCE_ID)
  references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;


--BATCH_JOB_EXECUTION_PARAMS
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(250) ,
	DATE_VAL DATETIME DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


-- BATCH_STEP_EXECUTION
CREATE TABLE BATCH_STEP_EXECUTION  (
  STEP_EXECUTION_ID BIGINT  PRIMARY KEY ,
  VERSION BIGINT NOT NULL,
  STEP_NAME VARCHAR(100) NOT NULL,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  START_TIME datetime NOT NULL ,		--datetime
  END_TIME datetime DEFAULT NULL,	--datetime
  STATUS VARCHAR(10),
  COMMIT_COUNT BIGINT ,
  READ_COUNT BIGINT ,
  FILTER_COUNT BIGINT ,
  WRITE_COUNT BIGINT ,
  READ_SKIP_COUNT BIGINT ,
  WRITE_SKIP_COUNT BIGINT ,
  PROCESS_SKIP_COUNT BIGINT ,
  ROLLBACK_COUNT BIGINT ,
  EXIT_CODE VARCHAR(20) ,
  EXIT_MESSAGE VARCHAR(2500) ,
  LAST_UPDATED datetime,			-- datetime
  constraint JOB_EXECUTION_STEP_FK foreign key (JOB_EXECUTION_ID)
  references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

--BATCH_JOB_EXECUTION_CONTEXT
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
  JOB_EXECUTION_ID BIGINT PRIMARY KEY,
  SHORT_CONTEXT VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT TEXT,
  constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
  references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

--BATCH_STEP_EXECUTION_CONTEXT
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
  STEP_EXECUTION_ID BIGINT PRIMARY KEY,
  SHORT_CONTEXT VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT TEXT,
  constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
  references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;